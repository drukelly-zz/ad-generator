// fonts
@font-face {
  font-family: 'Gotham-Medium';
  src: url('../../fonts/Gotham-Medium.eot?#iefix') format('embedded-opentype'),  url('../../fonts/Gotham-Medium.otf')  format('opentype'),
       url('../../fonts/Gotham-Medium.woff') format('woff'), url('../../fonts/Gotham-Medium.ttf')  format('truetype'), url('../../fonts/Gotham-Medium.svg#Gotham-Bold') format('svg');
  font-weight: normal;
  font-style: normal;
}

@font-face {
  font-family: 'Gotham-Book';
  src: url('../../fonts/Gotham-Book.eot?#iefix') format('embedded-opentype'),  url('../../fonts/Gotham-Book.otf')  format('opentype'),
       url('../../fonts/Gotham-Book.woff') format('woff'), url('../../fonts/Gotham-Book.ttf')  format('truetype'), url('../../fonts/Gotham-Book.svg#Gotham-Book') format('svg');
  font-weight: normal;
  font-style: normal;
}

// mixins
@function convert-angle($value, $unit) {
  $convertable-units: deg grad turn rad;
  $conversion-factors: 1 (10grad/9deg) (1turn/360deg) (3.1415926rad/180deg);
  @if index($convertable-units, unit($value)) and index($convertable-units, $unit) {
    @return $value
    / nth($conversion-factors, index($convertable-units, unit($value)))
    * nth($conversion-factors, index($convertable-units, $unit));
  }
  
  @warn "Cannot convert `#{unit($value)}` to `#{$unit}`.";
}

/// Test if `$value` is an angle
/// @param {*} $value - Value to test
/// @return {Bool}
@function is-direction($value) {
  $is-direction: index((to top, to top right, to right top, to right, to bottom right, to right bottom, to bottom, to bottom left, to left bottom, to left, to left top, to top left), $value);
  $is-angle: type-of($value) == 'number' and index('deg' 'grad' 'turn' 'rad', unit($value));
  
  @return $is-direction or $is-angle;
}

/// Convert a direction to legacy syntax
/// @param {Keyword | Angle} $value - Value to convert
/// @require {function} is-direction
/// @require {function} convert-angle
@function legacy-direction($value) {
  @if is-direction($value) == false {
    @warn "Cannot convert `#{$value}` to legacy syntax because it doesn't seem to be an angle or a direction";
  }
  
  $conversion-map: ( 
    to top          : bottom,
    to top right    : bottom left,
    to right top    : left bottom,
    to right        : left,
    to bottom right : top left,
    to right bottom : left top,
    to bottom       : top,
    to bottom left  : top right,
    to left bottom  : right top,
    to left         : right,
    to left top     : right bottom,
    to top left     : bottom right
    );

  @if map-has-key($conversion-map, $value) {
    @return map-get($conversion-map, $value);
  }
  
  @return 90deg - convert-angle($value, 'deg');
}

/// Mixin printing a linear-gradient 
/// as well as a plain color fallback 
/// and the `-webkit-` prefixed declaration
/// @access public
/// @param {String | List | Angle} $direction - Linear gradient direction
/// @param {Arglist} $color-stops - List of color-stops composing the gradient
@mixin linear-gradient($direction, $color-stops...) {
  @if is-direction($direction) == false {
    $color-stops: ($direction, $color-stops);
    $direction: 180deg;
  }
  background: nth(nth($color-stops, 1), 1);
  background: -webkit-linear-gradient(legacy-direction($direction), $color-stops);
  background: linear-gradient($direction, $color-stops);
}

@mixin vmColor($color) {
  background-image: url('data:image/svg+xml;utf8,<svg version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
   viewBox="0 0 488.1 74.3" style="enable-background:new 0 0 488.1 74.3;" xml:space="preserve"><g>
  <path fill="#{$color}" d="M209.7,68.9L188.3,9.4c-0.3-0.8-0.7-1.9-0.7-2.9c0-2.6,2.2-5,5.3-5c2.7,0,4.5,1.8,5.3,4.4L216,57.1l17.8-51.4
    c0.8-2.4,2.5-4.2,5.2-4.2h0.5c2.9,0,4.6,1.8,5.5,4.2l17.7,51.4l18-51.5c0.7-2.2,2.2-4.1,5-4.1c3,0,5.2,2.3,5.2,4.9
    c0,1-0.4,2-0.7,2.9l-21.5,59.6c-1.1,3.1-3.3,4.7-5.7,4.7h-0.4c-2.7,0-4.8-1.6-5.7-4.7l-17.5-50.6l-17.7,50.6
    c-0.9,3.1-3,4.7-5.7,4.7h-0.3C213,73.6,210.8,72,209.7,68.9"/>
  <path fill="#{$color}" d="M365.5,6.7c0-2.9,2.3-5.3,5.2-5.3c3,0,5.3,2.3,5.3,5.3v12.1C381.2,7,392.6,1.5,400.3,1.5
    c3.1,0,5.2,2.3,5.2,5.3c0,2.9-1.9,4.9-4.6,5.3C387.2,13.8,376,24,376,44.3v23.9c0,2.9-2.2,5.3-5.2,5.3c-3,0-5.3-2.3-5.3-5.3V6.7"/>
  <path fill="#{$color}" d="M439.1,74.2c-19,0-34.5-14.7-34.5-36.3v-0.3c0-20.1,14-36.3,33.1-36.3c20.4,0,32.1,16.9,32.1,35.4
    c0,2.8-2.3,4.9-4.8,4.9h-50c1.5,15.1,12,23.6,24.3,23.6c8.6,0,14.8-3.4,19.9-8.1c0.8-0.7,1.7-1.2,2.9-1.2c2.5,0,4.5,2,4.5,4.5
    c0,1.2-0.5,2.4-1.6,3.4C458.7,70,450.9,74.2,439.1,74.2 M459.6,33.8c-1.1-12.7-8.3-23.8-22-23.8c-12,0-21.1,10.1-22.4,23.8H459.6z"
    />
  <path fill="#{$color}" d="M291,52.4v-0.3c0-14.8,12.2-22.7,30-22.7c9,0,15.4,1.2,21.6,3v-2.4c0-12.6-7.8-19.2-20.9-19.2
    c-7.1,0-11.2,0.9-16.4,3.2c-0.7,0.3-1.4,0.4-1.9,0.4c-2.5,0-4.6-2-4.6-4.5c0-2.2,1-3.5,2.9-4.4c6.9-3,12.1-4,21.1-4
    c9.9,0,17.5,2.6,22.7,7.7c4.8,4.8,7.2,11.6,7.2,20.5v38.8c0,3-2.2,5.2-5,5.2c-3,0-5-2.2-5-4.9v-6.7c-4.9,6.4-13.1,12.1-25.4,12.1
    C304.2,74.3,291,66.8,291,52.4 M342.8,46.9v-6.8c-5.2-1.5-12.1-3-20.7-3c-13.2,0-20.5,5.7-20.5,14.6V52c0,8.8,8.2,14,17.7,14
    C332.2,66,342.8,58.1,342.8,46.9"/>
  <path fill="#{$color}" d="M19.2,5.9c-2.3-5-8-7.3-13.3-5C0.6,3.3-1.4,9.2,1,14.3l22.3,48.5c3.5,7.6,7.2,11.6,14.1,11.6
    c7.4,0,10.6-4.3,14.2-11.6c0,0,19.5-42.4,19.7-42.8c0.2-0.5,0.8-1.8,2.8-1.8c1.7,0,3.1,1.4,3.1,3.1v41.5c0,6.4,3.5,11.6,10.4,11.6
    c6.8,0,10.5-5.2,10.5-11.6V28.8c0-6.5,4.7-10.8,11.1-10.8c6.4,0,10.6,4.4,10.6,10.8v33.9c0,6.4,3.6,11.6,10.4,11.6
    c6.8,0,10.5-5.2,10.5-11.6V28.8c0-6.5,4.7-10.8,11.1-10.8c6.4,0,10.6,4.4,10.6,10.8v33.9c0,6.4,3.5,11.6,10.4,11.6
    c6.8,0,10.5-5.2,10.5-11.6V24.1C183.2,9.9,171.8,0,158,0c-13.7,0-22.3,9.5-22.3,9.5C131.2,3.6,124.9,0,114.2,0
    C103,0,93.2,9.5,93.2,9.5C88.6,3.6,80.8,0,74.4,0c-10,0-17.9,4.4-22.7,15.4L37.5,49L19.2,5.9"/>
  <path fill="#{$color}" d="M470.7,10.1L470.7,10.1c0-4.8,3.8-8.8,8.7-8.8c4.9,0,8.7,4,8.7,8.7v0c0,4.8-3.8,8.8-8.7,8.8
    C474.5,18.8,470.7,14.9,470.7,10.1 M486.5,10.1L486.5,10.1c0-3.9-3-7.1-7-7.1c-4,0-7,3.2-7,7.1v0.1c0,3.9,3,7.1,7,7.1
    C483.4,17.2,486.5,13.9,486.5,10.1"/>
  <path fill="#{$color}" d="M476.1,6.6c0-0.5,0.4-0.9,0.9-0.9h2.9c1.1,0,1.9,0.3,2.5,0.9c0.5,0.5,0.7,1.1,0.7,1.9v0c0,1.3-0.7,2.1-1.7,2.6
    l1.3,1.6c0.2,0.2,0.3,0.4,0.3,0.7c0,0.5-0.4,0.9-0.9,0.9c-0.4,0-0.7-0.2-0.9-0.5l-1.8-2.3H478v1.8c0,0.5-0.4,0.9-0.9,0.9
    c-0.5,0-0.9-0.4-0.9-0.9V6.6z M479.8,9.8c0.9,0,1.4-0.5,1.4-1.2v0c0-0.8-0.5-1.2-1.4-1.2H478v2.4H479.8z"/></g></svg>');
}

// basic html tags formatting 
input,
select {
  font-size: .8em;
}
label {
  font-weight: bold;
}

// utility classes
.active > img {
  border-color: #333;
}
.hide {
  display: none;
  font: 0/0 a;
  height: 0;
  overflow: hidden;
}

// app styling
#previewWindowContainer {
  height: 600px;
  overflow: hidden;
  position: relative;
  text-rendering: geometricPrecision;
  width: 160px;
  &.ad160x600 {
    height: 600px;
    width: 160px;
  }
  &.ad300x250 {
    height: 250px;
    width: 300px;
  }
  &.ad728x90 {
    height: 90px;
    width: 728px;
  }
}

.background {
  height: 100%;
  left: 0;
  position: absolute;
  top: 0;
  width: 100%;
  z-index: 10;
  &:before {
    -moz-background-blend-mode: multiply;
    -webkit-background-blend-mode: multiply;
    background-blend-mode: multiply;
    content: "";
    display: block;
    height: 100%;
  }
}

#positioningContainer {
  color: #565656;
  display: flex;
  font-family: 'Gotham-Book', sans-serif;
  justify-content: space-between;
  letter-spacing: -0.5pt;
  padding: 20px;
  position: relative;
  z-index: 20;
  .ad160x600 & {
    flex-direction: column;
    height: 600px;
    width: 160px;
  }
  .ad300x250 & {
    flex-direction: column;
    height: 250px;
    width: 300px;
  }
  .ad728x90 & {
    flex-direction: row;
    height: 90px;
    width: 728px;
  }
}

#headlineText {
  font: 24px/1 'Gotham-Medium', sans-serif;
  .ad160x600 & {
    margin-bottom: 1em;
  }
}

#designOptions li {
  cursor: pointer;
}

#adUnitOptions {
  > label {
    font-weight: normal;
  }
}

// watermark
.ad160x600 .watermark {
  .background {
    height: 600px;
    width: 160px;
    &:before {
      background: url('../../images/bg-160x600-watermark.jpg') no-repeat;
      background-size: 160px 600px;
    }
  }
}

.ad300x250 .watermark {
  .background {
    height: 250px;
    width: 300px;
    &:before {
      background: url('../../images/bg-300x250-watermark.jpg') no-repeat;
      background-size: 300px 250px;
    }
  }
}

.ad728x90 .watermark {
  .background {
    height: 90px;
    width: 728px;
    &:before {
      background: url('../../images/bg-728x90-watermark.jpg') no-repeat;
      background-size: 728px 90px;
    }
  }
}

.watermark {
  #positioningContainer {
    &.dark-blue,
    &.light-blue,
    &.light-green {
      color: #fff;
    }
  }
  .background {
    &:before {
      opacity: .3;
    }
    &.dark-blue {
      @include linear-gradient(92deg, #003f56 0%, #007099 82%);
    }
    &.light-blue {
      @include linear-gradient(92deg, #0087bf 0%, #0095d3 75%);
    }
    &.light-green {
      @include linear-gradient(92deg, #387c2c 0%, #6db33f 90%);
    }
  }
}

// color triangles
.ad160x600 .color-triangles {
  .background {
    height: 600px;
    width: 160px;
    &:before {
      background: url('../../images/bg-160x600-color-triangles.png') no-repeat bottom left;
      background-size: 160px 160px;
    }
  }
}

.ad300x250 .color-triangles {
  .background {
    height: 250px;
    width: 300px;
    &:before {
      background: url('../../images/bg-300x250-color-triangles.png') no-repeat top right;
      background-size: 89px 89px;
    }
  }
}

.ad728x90 .color-triangles {
  .background {
    height: 90px;
    width: 728px;
    &:before {
      background: url('../../images/bg-728x90-color-triangles.png') no-repeat top right;
      background-size: 91px 91px;
    }
  }

}
.color-triangles {
  #positioningContainer {
    &.dark-blue,
    &.light-blue,
    &.light-green {
      color: #fff;
    }
  }
  .background {
    &.dark-blue {
      background-color: #006990;
    }
    &.light-blue {
      background-color: #0095d3;
    }
    &.light-green {
      background-color: #62a339;
    }
    &.white {
      @include linear-gradient(0deg, #e6e6e6 0%, #fff 58%);
    }
  }
}

// white triangles
.ad160x600 .white-triangles {
  .background {
    height: 600px;
    width: 160px;
    &:before {
      background: url('../../images/bg-160x600-white-triangles.jpg') no-repeat bottom center;
      background-size: 160px 236px;
    }
  }
}
.ad300x250 .white-triangles {
  .background {
    height: 250px;
    width: 300px;
    &:before {
      background: url('../../images/bg-300x250-white-triangles.jpg') no-repeat right center;
      background-size: 160px 250px;
    }
  }
}
.ad728x90 .white-triangles {
  .background {
    height: 90px;
    width: 728px;
    &:before {
      background: url('../../images/bg-728x90-white-triangles.jpg') no-repeat right center;
      background-size: 164px 90px;
    }
  }
}

#vmwareLogo {
  @include vmColor(#fff);
  background-size: 100% 100%;
  height: 17px;
  width: 112px;
  .white & {
    @include vmColor(#717074);
  }
  .ad728x90 & {
    margin: auto 0;
  }
}

#callToAction {
  color: #fff !important; // lame hack
  span {
    background-color: #62a339;
    border-radius: 3px;
  }
  .light-green & {
    span {
      background-color: #0095d3;
    }
  }
  .ad728x90 & {
    margin: auto 0;
  }
}